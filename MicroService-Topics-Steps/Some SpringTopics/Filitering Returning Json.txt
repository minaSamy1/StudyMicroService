Step 23 - Implementing Static Filtering for REST API   
 >> @jsonIngnore    (above the property name)    
 >>  @JsonIgnoreProperties({"name","id"})    (above Class we define which proprty we need to not returned )



Step 24 - Implementing Dynamic Filtering for REST API 
       - which help us to define in each api which property we need to ignore 

by two step 
   1- in Bean  we set anntion above the class name     --->  @JsonFilter("SomeBeanFilter")
                
   2- in controller we define our logic
            - change the return type for the api to be    MappingJacksonValue   in method signature
			- let method return  mappingJacksonValue
			 
       @GetMapping("/filtering") //field2
	public MappingJacksonValue filtering() {
		
		SomeBean someBean = new SomeBean("value1","value2", "value3");

		MappingJacksonValue mappingJacksonValue = new MappingJacksonValue(someBean);
		
		SimpleBeanPropertyFilter filter = 
				SimpleBeanPropertyFilter.filterOutAllExcept("field1","field3");   /// will ignore field 1 , field3
		
		FilterProvider filters = 
				new SimpleFilterProvider().addFilter("SomeBeanFilter", filter );
		
		mappingJacksonValue.setFilters(filters );
		
		
		return mappingJacksonValue;
	}